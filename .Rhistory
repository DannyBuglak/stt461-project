# Extract just the FantasyPoints and GS columns for k-means
fb_subset <- normalized_fb[, c("FantasyPoints", "Tgt")]
# Perform k-means
set.seed(20)
k_fb_subset <- kmeans(fb_subset, centers = 4)
k_fb_subset$centers
# Create a data frame with the results
fb_clustered <- data.frame(fb_subset, cluster = factor(k_fb_subset$cluster))
# fviz_cluster to visualize
fviz_cluster(object = list(data = fb_clustered[, c("FantasyPoints", "Tgt")], cluster = k_fb_subset$cluster),
palette = "jco",
ggtheme = theme_minimal()) +
labs(x = "Fantasy Points", y = "Targets")
# Visualize the clustering
#fviz_cluster(list(data = normalized_fb, cluster = k$cluster), palette = "jco", ggtheme = theme_minimal())
# Cluster visualization with Games Started vs FantasyPoints
# Extract just the FantasyPoints and GS columns for k-means
fb_subset <- normalized_fb[, c("FantasyPoints", "Tgt")]
# Perform k-means
set.seed(20)
k_fb_subset <- kmeans(fb_subset, centers = 4)
k_fb_subset$centers
# Create a data frame with the results
fb_clustered <- data.frame(fb_subset, cluster = factor(k_fb_subset$cluster))
# fviz_cluster to visualize
fviz_cluster(object = list(data = normalized_fb[, c("FantasyPoints", "Tgt")], cluster = k_fb_subset$cluster),
palette = "jco",
ggtheme = theme_minimal()) +
labs(x = "Fantasy Points", y = "Targets")
# Visualize the clustering
#fviz_cluster(list(data = normalized_fb, cluster = k$cluster), palette = "jco", ggtheme = theme_minimal())
# Cluster visualization with Games Started vs FantasyPoints
# Extract just the FantasyPoints and GS columns for k-means
fb_subset <- fb1[, c("FantasyPoints", "Tgt")]
# Perform k-means
set.seed(20)
k_fb_subset <- kmeans(fb_subset, centers = 4)
k_fb_subset$centers
# Create a data frame with the results
fb_clustered <- data.frame(fb_subset, cluster = factor(k_fb_subset$cluster))
# fviz_cluster to visualize
fviz_cluster(object = list(data = fb1[, c("FantasyPoints", "Tgt")], cluster = k_fb_subset$cluster),
palette = "jco",
ggtheme = theme_minimal()) +
labs(x = "Fantasy Points", y = "Targets")
# Visualize the clustering
#fviz_cluster(list(data = normalized_fb, cluster = k$cluster), palette = "jco", ggtheme = theme_minimal())
# Cluster visualization with Games Started vs FantasyPoints
# Extract just the FantasyPoints and GS columns for k-means
fb_subset <- clust_fb[, c("FantasyPoints", "GS")]
# Perform k-means
set.seed(20)
k_fb_subset <- kmeans(fb_subset, centers = 4)
k_fb_subset$centers
# Create a data frame with the results
fb_clustered <- data.frame(fb_subset, cluster = factor(k_fb_subset$cluster))
# fviz_cluster to visualize
fviz_cluster(object = list(data = fb_clustered[, c("FantasyPoints", "GS")], cluster = k_fb_subset$cluster),
palette = "jco",
ggtheme = theme_minimal()) +
labs(x = "Fantasy Points", y = "Games Started")
# Visualize the clustering
#fviz_cluster(list(data = normalized_fb, cluster = k$cluster), palette = "jco", ggtheme = theme_minimal())
# Cluster visualization with Games Started vs FantasyPoints
# Extract just the FantasyPoints and GS columns for k-means
fb_subset <- clust_fb[, c("FantasyPoints", "GS")]
# Perform k-means
set.seed(20)
k_fb_subset <- kmeans(fb_subset, centers = 4)
k_fb_subset$centers
# Create a data frame with the results
fb_clustered <- data.frame(fb_subset, cluster = factor(k_fb_subset$cluster))
# fviz_cluster to visualize
fviz_cluster(object = list(data = clust_fb[, c("FantasyPoints", "GS")], cluster = k_fb_subset$cluster),
palette = "jco",
ggtheme = theme_minimal()) +
labs(x = "Fantasy Points", y = "Games Started")
# Visualize the clustering
#fviz_cluster(list(data = normalized_fb, cluster = k$cluster), palette = "jco", ggtheme = theme_minimal())
# Cluster visualization with Games Started vs FantasyPoints
# Extract just the FantasyPoints and GS columns for k-means
fb_subset <- clust_fb[, c("FantasyPoints", "GS")]
summary(fb_subset)
# Perform k-means
set.seed(20)
k_fb_subset <- kmeans(fb_subset, centers = 4)
k_fb_subset$centers
# Create a data frame with the results
fb_clustered <- data.frame(fb_subset, cluster = factor(k_fb_subset$cluster))
# fviz_cluster to visualize
fviz_cluster(object = list(data = clust_fb[, c("FantasyPoints", "GS")], cluster = k_fb_subset$cluster),
palette = "jco",
ggtheme = theme_minimal()) +
labs(x = "Fantasy Points", y = "Games Started")
# Visualize the clustering
#fviz_cluster(list(data = normalized_fb, cluster = k$cluster), palette = "jco", ggtheme = theme_minimal())
# Cluster visualization with Games Started vs FantasyPoints
# Extract just the FantasyPoints and GS columns for k-means
fb_subset <- clust_fb[, c("FantasyPoints", "GS")]
summary(fb_subset)
# Perform k-means
set.seed(20)
k_fb_subset <- kmeans(fb_subset, centers = 4)
k_fb_subset$centers
# Create a data frame with the results
fb_clustered <- data.frame(fb_subset, cluster = factor(k_fb_subset$cluster))
# fviz_cluster to visualize
fviz_cluster(object = list(data = fb_subset, cluster = k_fb_subset$cluster),
palette = "jco",
ggtheme = theme_minimal()) +
labs(x = "Fantasy Points", y = "Games Started")
# Visualize the clustering
#fviz_cluster(list(data = normalized_fb, cluster = k$cluster), palette = "jco", ggtheme = theme_minimal())
# Cluster visualization with Games Started vs FantasyPoints
# Extract just the FantasyPoints and GS columns for k-means
fb_subset <- clust_fb[, c("FantasyPoints", "GS")]
summary(fb_subset)
# Perform k-means
set.seed(20)
k_fb_subset <- kmeans(fb_subset, centers = 4)
k_fb_subset$centers
# Create a data frame with the results
fb_clustered <- data.frame(fb_subset, cluster = factor(k_fb_subset$cluster))
# fviz_cluster to visualize
fviz_cluster(object = list(data = fb_subset, cluster = k_fb_subset$cluster),
palette = "jco",
ggtheme = theme_minimal()) +
labs(x = "Fantasy Points", y = "Games Started")
ggplot(fb_clustered, aes(x = FantasyPoints, y = GS, color = cluster)) +
geom_point() +
scale_color_manual(values = c("blue", "yellow", "red", "green")) +
labs(x = "Fantasy Points", y = "Games Started", color = "Cluster") +
theme_minimal()
# Visualize the clustering
#fviz_cluster(list(data = normalized_fb, cluster = k$cluster), palette = "jco", ggtheme = theme_minimal())
# Cluster visualization with Games Started vs FantasyPoints
# Extract just the FantasyPoints and GS columns for k-means
fb_subset <- clust_fb[, c("FantasyPoints", "GS")]
summary(fb_subset)
# Perform k-means
set.seed(20)
k_fb_subset <- kmeans(fb_subset, centers = 4)
k_fb_subset$centers
# Create a data frame with the results
fb_clustered <- data.frame(fb_subset, cluster = factor(k_fb_subset$cluster))
# fviz_cluster to visualize
fviz_cluster(object = list(data = fb_subset, cluster = k_fb_subset$cluster),
palette = "jco",
ggtheme = theme_minimal()) +
labs(x = "Fantasy Points", y = "Games Started")
ggplot(fb_clustered, aes(x = FantasyPoints, y = GS, color = cluster)) +
geom_point() +
scale_color_manual(values = c("cadetblue", "darkgoldenrod", "brown1", "chartreuse3")) +
labs(x = "Fantasy Points", y = "Games Started", color = "Cluster") +
theme_minimal()
# Visualize the clustering
#fviz_cluster(list(data = normalized_fb, cluster = k$cluster), palette = "jco", ggtheme = theme_minimal())
# Cluster visualization with Games Started vs FantasyPoints
# Extract just the FantasyPoints and GS columns for k-means
fb_subset <- clust_fb[, c("FantasyPoints", "GS")]
summary(fb_subset)
# Perform k-means
set.seed(20)
k_fb_subset <- kmeans(fb_subset, centers = 4)
k_fb_subset$centers
# Create a data frame with the results
fb_clustered <- data.frame(fb_subset, cluster = factor(k_fb_subset$cluster))
# fviz_cluster to visualize normalized data
fviz_cluster(object = list(data = fb_subset, cluster = k_fb_subset$cluster),
palette = "jco",
ggtheme = theme_minimal()) +
labs(x = "Fantasy Points", y = "Games Started")
# GGplot to visualize
ggplot(fb_clustered, aes(x = FantasyPoints, y = GS, color = cluster)) +
geom_point() +
scale_color_manual(values = c("cadetblue", "darkgoldenrod", "brown1", "chartreuse3")) +
labs(x = "Fantasy Points", y = "Games Started", color = "Cluster") +
theme_minimal()
# Visualize the clustering
#fviz_cluster(list(data = normalized_fb, cluster = k$cluster), palette = "jco", ggtheme = theme_minimal())
# Cluster visualization with Targets vs FantasyPoints
# Extract just the FantasyPoints and GS columns for k-means
fb_subset <- clust_fb[, c("FantasyPoints", "Tgt")]
summary(fb_subset)
# Perform k-means
set.seed(20)
k_fb_subset <- kmeans(fb_subset, centers = 4)
k_fb_subset$centers
# Create a data frame with the results
fb_clustered <- data.frame(fb_subset, cluster = factor(k_fb_subset$cluster))
# fviz_cluster to visualize normalized data
fviz_cluster(object = list(data = fb_subset, cluster = k_fb_subset$cluster),
palette = "jco",
ggtheme = theme_minimal()) +
labs(x = "Fantasy Points", y = "Targets")
# GGplot to visualize
ggplot(fb_clustered, aes(x = FantasyPoints, y = GS, color = cluster)) +
geom_point() +
scale_color_manual(values = c("cadetblue", "darkgoldenrod", "brown1", "chartreuse3")) +
labs(x = "Fantasy Points", y = "Games Started", color = "Cluster") +
theme_minimal()
# Cluster visualization with Games Started vs FantasyPoints
# Extract just the FantasyPoints and GS columns for k-means
fb_subset <- clust_fb[, c("FantasyPoints", "GS")]
summary(fb_subset)
# Perform k-means
set.seed(20)
k_fb_subset <- kmeans(fb_subset, centers = 4)
k_fb_subset$centers
# Create a data frame with the results
fb_clustered <- data.frame(fb_subset, cluster = factor(k_fb_subset$cluster))
# fviz_cluster to visualize normalized data
fviz_cluster(object = list(data = fb_subset, cluster = k_fb_subset$cluster),
palette = "jco",
ggtheme = theme_minimal()) +
labs(x = "Fantasy Points", y = "Games Started")
# GGplot to visualize
ggplot(fb_clustered, aes(x = FantasyPoints, y = GS, color = cluster)) +
geom_point() +
scale_color_manual(values = c("cadetblue", "darkgoldenrod", "brown1", "chartreuse3")) +
labs(x = "Fantasy Points", y = "Games Started", color = "Cluster") +
theme_minimal()
# Visualize the clustering
#fviz_cluster(list(data = normalized_fb, cluster = k$cluster), palette = "jco", ggtheme = theme_minimal())
# Cluster visualization with Targets vs FantasyPoints
# Extract just the FantasyPoints and GS columns for k-means
fb_subset <- clust_fb[, c("FantasyPoints", "Tgt")]
summary(fb_subset)
# Perform k-means
set.seed(20)
k_fb_subset <- kmeans(fb_subset, centers = 4)
k_fb_subset$centers
# Create a data frame with the results
fb_clustered <- data.frame(fb_subset, cluster = factor(k_fb_subset$cluster))
# fviz_cluster to visualize normalized data
fviz_cluster(object = list(data = fb_subset, cluster = k_fb_subset$cluster),
palette = "jco",
ggtheme = theme_minimal()) +
labs(x = "Fantasy Points", y = "Targets")
# GGplot to visualize
ggplot(fb_clustered, aes(x = FantasyPoints, y = GS, color = cluster)) +
scale_color_manual(values = c("cadetblue", "darkgoldenrod", "brown1", "chartreuse3")) +
labs(x = "Fantasy Points", y = "Games Started", color = "Cluster") +
theme_minimal()
# Cluster visualization with Targets vs FantasyPoints
# Extract just the FantasyPoints and GS columns for k-means
fb_subset <- clust_fb[, c("FantasyPoints", "Tgt")]
summary(fb_subset)
# Perform k-means
set.seed(20)
k_fb_subset <- kmeans(fb_subset, centers = 4)
k_fb_subset$centers
# Create a data frame with the results
fb_clustered <- data.frame(fb_subset, cluster = factor(k_fb_subset$cluster))
# fviz_cluster to visualize normalized data
fviz_cluster(object = list(data = fb_subset, cluster = k_fb_subset$cluster),
palette = "jco",
ggtheme = theme_minimal()) +
labs(x = "Fantasy Points", y = "Targets")
# GGplot to visualize
ggplot(fb_clustered, aes(x = FantasyPoints, y = Tgt, color = cluster)) +
geom_point() +
scale_color_manual(values = c("cadetblue", "darkgoldenrod", "brown1", "chartreuse3")) +
labs(x = "Fantasy Points", y = "Games Started", color = "Cluster") +
theme_minimal()
# Visualize the clustering
#fviz_cluster(list(data = normalized_fb, cluster = k$cluster), palette = "jco", ggtheme = theme_minimal())
# Cluster visualization with Games Started vs FantasyPoints
# Extract just the FantasyPoints and GS columns for k-means
fb_subset <- clust_fb[, c("FantasyPoints", "GS")]
summary(fb_subset)
# Perform k-means
set.seed(20)
k_fb_subset <- kmeans(fb_subset, centers = 4)
k_fb_subset$centers
# Create a data frame with the results
fb_clustered <- data.frame(fb_subset, cluster = factor(k_fb_subset$cluster))
# fviz_cluster to visualize normalized data
fviz_cluster(object = list(data = fb_subset, cluster = k_fb_subset$cluster),
palette = "jco",
ggtheme = theme_minimal()) +
labs(x = "Fantasy Points", y = "Games Started")
# GGplot to visualize
ggplot(fb_clustered, aes(x = FantasyPoints, y = GS, color = cluster)) +
geom_point() +
scale_color_manual(values = c("cadetblue", "darkgoldenrod", "brown1", "chartreuse3")) +
labs(x = "Fantasy Points", y = "Games Started", color = "Cluster") +
theme_minimal()
# Visualize the clustering
#fviz_cluster(list(data = normalized_fb, cluster = k$cluster), palette = "jco", ggtheme = theme_minimal())
# Cluster visualization with Games Started vs FantasyPoints
# Extract just the FantasyPoints and GS columns for k-means
fb_subset <- clust_fb[, c("FantasyPoints", "GS")]
summary(fb_subset)
# Perform k-means
set.seed(20)
k_fb_subset <- kmeans(fb_subset, centers = 4)
k_fb_subset$centers
# Create a data frame with the results
fb_clustered <- data.frame(fb_subset, cluster = factor(k_fb_subset$cluster))
# fviz_cluster to visualize normalized data
fviz_cluster(object = list(data = fb_subset, cluster = k_fb_subset$cluster),
palette = "jco",
ggtheme = theme_minimal()) +
labs(x = "Fantasy Points", y = "Games Started")
# GGplot to visualize
ggplot(fb_clustered, aes(x = FantasyPoints, y = GS, color = cluster)) +
geom_point() +
scale_color_manual(values = c("cadetblue", "yellow1", "cornsilk3", "brown1")) +
labs(x = "Fantasy Points", y = "Games Started", color = "Cluster") +
theme_minimal()
# Cluster visualization with Targets vs FantasyPoints
# Extract just the FantasyPoints and GS columns for k-means
fb_subset <- clust_fb[, c("FantasyPoints", "Tgt")]
summary(fb_subset)
# Perform k-means
set.seed(20)
k_fb_subset <- kmeans(fb_subset, centers = 4)
k_fb_subset$centers
# Create a data frame with the results
fb_clustered <- data.frame(fb_subset, cluster = factor(k_fb_subset$cluster))
# fviz_cluster to visualize normalized data
fviz_cluster(object = list(data = fb_subset, cluster = k_fb_subset$cluster),
palette = "jco",
ggtheme = theme_minimal()) +
labs(x = "Fantasy Points", y = "Targets")
# GGplot to visualize
ggplot(fb_clustered, aes(x = FantasyPoints, y = Tgt, color = cluster)) +
geom_point() +
scale_color_manual(values = c("cadetblue", "yellow1", "cornsilk3", "brown1")) +
labs(x = "Fantasy Points", y = "Games Started", color = "Cluster") +
theme_minimal()
# Visualize the clustering
#fviz_cluster(list(data = normalized_fb, cluster = k$cluster), palette = "jco", ggtheme = theme_minimal())
# Cluster visualization with Targets vs FantasyPoints
# Extract just the FantasyPoints and GS columns for k-means
fb_subset <- clust_fb[, c("FantasyPoints", "Tgt")]
summary(fb_subset)
# Perform k-means
set.seed(20)
k_fb_subset <- kmeans(fb_subset, centers = 4)
k_fb_subset$centers
# Create a data frame with the results
fb_clustered <- data.frame(fb_subset, cluster = factor(k_fb_subset$cluster))
# fviz_cluster to visualize normalized data
fviz_cluster(object = list(data = fb_subset, cluster = k_fb_subset$cluster),
palette = "jco",
ggtheme = theme_minimal()) +
labs(x = "Fantasy Points", y = "Targets")
# GGplot to visualize
ggplot(fb_clustered, aes(x = FantasyPoints, y = Tgt, color = cluster)) +
geom_point() +
scale_color_manual(values = c("cadetblue", "yellow3", "cornsilk3", "brown1")) +
labs(x = "Fantasy Points", y = "Games Started", color = "Cluster") +
theme_minimal()
# Visualize the clustering
#fviz_cluster(list(data = normalized_fb, cluster = k$cluster), palette = "jco", ggtheme = theme_minimal())
# Cluster visualization with Games Started vs FantasyPoints
# Extract just the FantasyPoints and GS columns for k-means
fb_subset <- clust_fb[, c("FantasyPoints", "GS")]
summary(fb_subset)
# Perform k-means
set.seed(20)
k_fb_subset <- kmeans(fb_subset, centers = 4)
k_fb_subset$centers
# Create a data frame with the results
fb_clustered <- data.frame(fb_subset, cluster = factor(k_fb_subset$cluster))
# fviz_cluster to visualize normalized data
fviz_cluster(object = list(data = fb_subset, cluster = k_fb_subset$cluster),
palette = "jco",
ggtheme = theme_minimal()) +
labs(x = "Fantasy Points", y = "Games Started")
# GGplot to visualize
ggplot(fb_clustered, aes(x = FantasyPoints, y = GS, color = cluster)) +
geom_point() +
scale_color_manual(values = c("cadetblue", "yellow3", "cornsilk3", "brown1")) +
labs(x = "Fantasy Points", y = "Games Started", color = "Cluster") +
theme_minimal()
# Cluster visualization with Fumbles Lost vs FantasyPoints
# Extract just the FantasyPoints and GS columns for k-means
fb_subset <- clust_fb[, c("FantasyPoints", "FumblesLost")]
summary(fb_subset)
# Perform k-means
set.seed(20)
k_fb_subset <- kmeans(fb_subset, centers = 4)
k_fb_subset$centers
# Create a data frame with the results
fb_clustered <- data.frame(fb_subset, cluster = factor(k_fb_subset$cluster))
# fviz_cluster to visualize normalized data
fviz_cluster(object = list(data = fb_subset, cluster = k_fb_subset$cluster),
palette = "jco",
ggtheme = theme_minimal()) +
labs(x = "Fantasy Points", y = "FumblesLost")
# GGplot to visualize
ggplot(fb_clustered, aes(x = FantasyPoints, y = FumblesLost, color = cluster)) +
geom_point() +
scale_color_manual(values = c("cadetblue", "yellow3", "cornsilk3", "brown1")) +
labs(x = "Fantasy Points", y = "FumblesLost", color = "Cluster") +
theme_minimal()
# Cluster visualization with Fumbles vs FantasyPoints
# Extract just the FantasyPoints and GS columns for k-means
fb_subset <- clust_fb[, c("FantasyPoints", "Fumbles")]
summary(fb_subset)
# Perform k-means
set.seed(20)
k_fb_subset <- kmeans(fb_subset, centers = 4)
k_fb_subset$centers
# Create a data frame with the results
fb_clustered <- data.frame(fb_subset, cluster = factor(k_fb_subset$cluster))
# fviz_cluster to visualize normalized data
fviz_cluster(object = list(data = fb_subset, cluster = k_fb_subset$cluster),
palette = "jco",
ggtheme = theme_minimal()) +
labs(x = "Fantasy Points", y = "Fumbles")
# GGplot to visualize
ggplot(fb_clustered, aes(x = FantasyPoints, y = Fumbles, color = cluster)) +
geom_point() +
scale_color_manual(values = c("cadetblue", "yellow3", "cornsilk3", "brown1")) +
labs(x = "Fantasy Points", y = "Fumbles", color = "Cluster") +
theme_minimal()
# ALL X AXIS ARE THE CLUSTER
# RECEIVING YARDS PER GAME
ggplot(clust_fb, aes(x=factor(cluster), y=ReceivingYds_gm, fill=factor(cluster))) +
geom_boxplot() +
labs(x="Cluster", y="Receiving Yards per Game")
# GAMES STARTED
ggplot(clust_fb, aes(x=factor(cluster), y=GS, fill=factor(cluster))) +
geom_boxplot() +
labs(x="Cluster", y="Games Started")
# PASSING YARDS PER GAME
ggplot(clust_fb, aes(x=factor(cluster), y=PassingYds_gm, fill=factor(cluster))) +
geom_boxplot() +
labs(x="Cluster", y="Passing Yards per Game")
# FANTASY POINTS PER GAME
ggplot(clust_fb, aes(x=factor(cluster), y=FantasyPoints_gm, fill=factor(cluster))) +
geom_boxplot() +
labs(x="Cluster", y="Fantasy Points per Game")
# TOTAL FANTASY POINTS
ggplot(clust_fb, aes(x=factor(cluster), y=FantasyPoints, fill=factor(cluster))) +
geom_boxplot() +
labs(x="Cluster", y="Fantasy Points")
# FUMBLES PER GAME
ggplot(clust_fb, aes(x=factor(cluster), y=Fumbles_gm, fill=factor(cluster))) +
geom_boxplot() +
labs(x="Cluster", y="Fumbles per Game")
# FUMBLES LOST PER GAME
ggplot(clust_fb, aes(x=factor(cluster), y=FumblesLost_gm, fill=factor(cluster))) +
geom_boxplot() +
labs(x="Cluster", y="Fumbles Lost per Game")
# Cluster visualization with Fumbles Lost vs FantasyPoints
# Extract just the FantasyPoints and GS columns for k-means
fb_subset <- clust_fb[, c("FantasyPoints", "FumblesLost_gm")]
summary(fb_subset)
# Perform k-means
set.seed(20)
k_fb_subset <- kmeans(fb_subset, centers = 4)
k_fb_subset$centers
# Create a data frame with the results
fb_clustered <- data.frame(fb_subset, cluster = factor(k_fb_subset$cluster))
# fviz_cluster to visualize normalized data
fviz_cluster(object = list(data = fb_subset, cluster = k_fb_subset$cluster),
palette = "jco",
ggtheme = theme_minimal()) +
labs(x = "Fantasy Points", y = "FumblesLost_gm")
# GGplot to visualize
ggplot(fb_clustered, aes(x = FantasyPoints, y = FumblesLost_gm, color = cluster)) +
geom_point() +
scale_color_manual(values = c("cadetblue", "yellow3", "cornsilk3", "brown1")) +
labs(x = "Fantasy Points", y = "FumblesLost_gm", color = "Cluster") +
theme_minimal()
# Cluster visualization with Fumbles Lost vs FantasyPoints
# Extract just the FantasyPoints and GS columns for k-means
fb_subset <- clust_fb[, c("FantasyPoints_gm", "FumblesLost_gm")]
summary(fb_subset)
# Perform k-means
set.seed(20)
k_fb_subset <- kmeans(fb_subset, centers = 4)
k_fb_subset$centers
# Create a data frame with the results
fb_clustered <- data.frame(fb_subset, cluster = factor(k_fb_subset$cluster))
# fviz_cluster to visualize normalized data
fviz_cluster(object = list(data = fb_subset, cluster = k_fb_subset$cluster),
palette = "jco",
ggtheme = theme_minimal()) +
labs(x = "Fantasy Points", y = "FumblesLost_gm")
# GGplot to visualize
ggplot(fb_clustered, aes(x = FantasyPoints_gm, y = FumblesLost_gm, color = cluster)) +
geom_point() +
scale_color_manual(values = c("cadetblue", "yellow3", "cornsilk3", "brown1")) +
labs(x = "Fantasy Points", y = "FumblesLost_gm", color = "Cluster") +
theme_minimal()
# Cluster visualization with Fumbles Lost vs FantasyPoints
# Extract just the FantasyPoints and GS columns for k-means
fb_subset <- clust_fb[, c("FantasyPoints_gm", "Fumbles_gm")]
summary(fb_subset)
# Perform k-means
set.seed(20)
k_fb_subset <- kmeans(fb_subset, centers = 4)
k_fb_subset$centers
# Create a data frame with the results
fb_clustered <- data.frame(fb_subset, cluster = factor(k_fb_subset$cluster))
# fviz_cluster to visualize normalized data
fviz_cluster(object = list(data = fb_subset, cluster = k_fb_subset$cluster),
palette = "jco",
ggtheme = theme_minimal()) +
labs(x = "Fantasy Points", y = "Fumbles_gm")
# GGplot to visualize
ggplot(fb_clustered, aes(x = FantasyPoints_gm, y = Fumbles_gm, color = cluster)) +
geom_point() +
scale_color_manual(values = c("cadetblue", "yellow3", "cornsilk3", "brown1")) +
labs(x = "Fantasy Points", y = "Fumbles_gm", color = "Cluster") +
theme_minimal()
